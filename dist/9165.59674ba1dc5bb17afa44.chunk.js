"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9165],{69165:function(e,t,i){i.r(t),i.d(t,{default:function(){return x}}),i(5769),i(61013),i(27471),i(63238),i(61418),i(17460),i(14078),i(52077),i(72482),i(48410),i(19068),i(87211),i(25901),i(92189),i(95163),i(99785),i(91047);var a=i(65009),n=i.n(a),l=i(83094),s=i(27515),r=i(90914),c=i(12392),o=i(78695),u=i(33942),b=i(28978),d=(i(45368),i(83225),i(78066),i(21865),i(20716),i(85427),i(6626),i(15359),i(53913));function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function h(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,(void 0,n=function(e,t){if("object"!==p(e)||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var a=i.call(e,"string");if("object"!==p(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(a.key),"symbol"===p(n)?n:String(n)),a)}var n}function f(e){return e.preventDefault(),!1}function m(e,t,i){!function(e,t,a,l,s){var r=e.querySelector(".genreFilters");l.length?r.classList.remove("hide"):r.classList.add("hide");var c="";c+=l.map((function(e){var t,a,l="";return l+="<label>",l+='<input is="emby-checkbox" type="checkbox"'+(t=e,(-1!==((a=-1===(i.settings.GenreIds||"").indexOf("|")?",":"|")+(i.settings.GenreIds||"")+a).indexOf(a+t.Id+a)?" checked":"")+' data-filter="')+e.Id+'" class="chkGenreFilter"/>',(l+="<span>"+n()(e.Name)+"</span>")+"</label>"})).join(""),r.querySelector(".filterOptions").innerHTML=c}(e,0,0,t.Genres)}function v(e,t,i){var a=i.checked;a=a||null,b.setFilter(t,a)}function y(e,t){for(var i=l.ZP.parentWithClass(e,"checkboxList-verticalwrap"),a=s.Z.getFocusableElements(i),n=-1,r=0,c=a.length;r<c;r++)if(a[r]===e){n=r;break}n+=t,n=Math.min(a.length-1,n);var o=a[n=Math.max(0,n)];o&&s.Z.focus(o)}function g(e,t,a){Promise.resolve().then(i.bind(i,74227)).then((function(i){var n=a?"on":"off";i.centerFocus[n](e,t)}))}function S(e){switch(e.detail.command){case"left":y(e.target,-1),e.preventDefault();break;case"right":y(e.target,1),e.preventDefault()}}function k(e,t){for(var i=e.querySelectorAll(".checkboxList-verticalwrap"),a=0,n=i.length;a<n;a++)t?c.default.on(i[a],S):c.default.off(i[a],S)}var x=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,i;return t=e,(i=[{key:"show",value:function(e){return new Promise((function(t){var i={removeOnClose:!0,scrollY:!1};o.Z.tv?i.size="fullscreen":i.size="small";var a=r.default.createDialog(i);a.classList.add("formDialog");var n="";n+='<div class="formDialogHeader">',n+='<button is="paper-icon-button-light" class="btnCancel hide-mouse-idle-tv" tabindex="-1" title="'.concat(u.ZP.translate("ButtonBack"),'"><span class="material-icons arrow_back" aria-hidden="true"></span></button>'),n+='<h3 class="formDialogHeaderTitle">${Filters}</h3>',n+="</div>",n+='<div class="formDialogContent smoothScrollY"> <div class="dialogContentInner dialog-content-centered"> <form style="margin:auto"> <div class="verticalSection verticalSection-extrabottompadding basicFilterSection focuscontainer-x" style="margin-top:2em"> <div class="checkboxList checkboxList-verticalwrap"> <label class="viewSetting simpleFilter" data-settingname="IsUnplayed"> <input type="checkbox" is="emby-checkbox"/> <span>${Unplayed}</span> </label> <label class="viewSetting simpleFilter" data-settingname="IsPlayed"> <input type="checkbox" is="emby-checkbox"/> <span>${Played}</span> </label> <label class="viewSetting simpleFilter" data-settingname="IsFavorite"> <input type="checkbox" is="emby-checkbox"/> <span>${Favorite}</span> </label> <label class="viewSetting simpleFilter" data-settingname="IsResumable"> <input type="checkbox" is="emby-checkbox"/> <span>${ContinueWatching}</span> </label> </div> </div> <div class="verticalSection verticalSection-extrabottompadding viewSetting focuscontainer-x" data-settingname="SeriesStatus"> <h2 class="checkboxListLabel">${HeaderSeriesStatus}</h2> <div class="checkboxList checkboxList-verticalwrap"> <label> <input type="checkbox" is="emby-checkbox" class="chkSeriesStatus" data-filter="Continuing"/> <span>${Continuing}</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="chkSeriesStatus" data-filter="Ended"/> <span>${Ended}</span> </label> </div> </div> <div class="verticalSection verticalSection-extrabottompadding hide genreFilters focuscontainer-x"> <h2 class="checkboxListLabel">${Genres}</h2> <div class="checkboxList checkboxList-verticalwrap filterOptions"> </div> </div> <div class="verticalSection verticalSection-extrabottompadding viewSetting focuscontainer-x" data-settingname="VideoType"> <h2 class="checkboxListLabel">${HeaderVideoType}</h2> <div class="checkboxList checkboxList-verticalwrap"> <label> <input type="checkbox" is="emby-checkbox" class="simpleFilter" data-settingname="IsHD"/> <span>HD</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="simpleFilter" data-settingname="Is4K"/> <span>4K</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="simpleFilter" data-settingname="IsSD"/> <span>SD</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="simpleFilter" data-settingname="Is3D"/> <span>3D</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="chkVideoTypeFilter" data-filter="Bluray"/> <span>Blu-ray</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="chkVideoTypeFilter" data-filter="Dvd"/> <span>DVD</span> </label> </div> </div> <div class="verticalSection verticalSection-extrabottompadding featureSection hide focuscontainer-x"> <h2 class="checkboxListLabel">${Features}</h2> <div class="checkboxList checkboxList-verticalwrap"> <label class="viewSetting simpleFilter" data-settingname="HasSubtitles"> <input type="checkbox" is="emby-checkbox" class="chkFeatureFilter"/> <span>${Subtitles}</span> </label> <label class="viewSetting simpleFilter" data-settingname="HasTrailer"> <input type="checkbox" is="emby-checkbox" class="chkFeatureFilter"/> <span>${Trailers}</span> </label> <label class="viewSetting simpleFilter" data-settingname="HasSpecialFeature"> <input type="checkbox" is="emby-checkbox" class="chkFeatureFilter"/> <span>${Extras}</span> </label> <label class="viewSetting simpleFilter" data-settingname="HasThemeSong"> <input type="checkbox" is="emby-checkbox" class="chkFeatureFilter"/> <span>${ThemeSongs}</span> </label> <label class="viewSetting simpleFilter" data-settingname="HasThemeVideo"> <input type="checkbox" is="emby-checkbox" class="chkFeatureFilter"/> <span>${ThemeVideos}</span> </label> </div> </div> </form> </div> </div> ',a.innerHTML=u.ZP.translateHtml(n,"core");for(var l,s=a.querySelectorAll(".viewSetting"),c=0,p=s.length;c<p;c++)-1===e.visibleSettings.indexOf(s[c].getAttribute("data-settingname"))?s[c].classList.add("hide"):s[c].classList.remove("hide");!function(e,t){e.querySelector("form").addEventListener("submit",f);var i,a,n=e.querySelectorAll(".simpleFilter");for(i=0,a=n.length;i<a;i++)"INPUT"===n[i].tagName?n[i].checked=t[n[i].getAttribute("data-settingname")]||!1:n[i].querySelector("input").checked=t[n[i].getAttribute("data-settingname")]||!1;var l=t.VideoTypes?t.VideoTypes.split(","):[];for(i=0,a=(n=e.querySelectorAll(".chkVideoTypeFilter")).length;i<a;i++)n[i].checked=-1!==l.indexOf(n[i].getAttribute("data-filter"));var s=t.SeriesStatus?t.SeriesStatus.split(","):[];for(i=0,a=(n=e.querySelectorAll(".chkSeriesStatus")).length;i<a;i++)n[i].checked=-1!==s.indexOf(n[i].getAttribute("data-filter"));e.querySelector(".basicFilterSection .viewSetting:not(.hide)")?e.querySelector(".basicFilterSection").classList.remove("hide"):e.querySelector(".basicFilterSection").classList.add("hide"),e.querySelector(".featureSection .viewSetting:not(.hide)")?e.querySelector(".featureSection").classList.remove("hide"):e.querySelector(".featureSection").classList.add("hide")}(a,e.settings),function(e,t){var i=d.Z.getApiClient(t.serverId),a=Object.assign(t.filterMenuOptions,{UserId:i.getCurrentUserId(),ParentId:t.parentId,IncludeItemTypes:t.itemTypes.join(",")});i.getFilters(a).then((function(i){m(e,i,t)}))}(a,e),k(a,!0),a.querySelector(".btnCancel").addEventListener("click",(function(){r.default.close(a)})),o.Z.tv&&g(a.querySelector(".formDialogContent"),!1,!0),a.querySelector("form").addEventListener("change",(function(){l=!0}),!0),r.default.open(a).then((function(){return k(a,!1),o.Z.tv&&g(a.querySelector(".formDialogContent"),!1,!1),l?(function(e,t,i){for(var a=e.querySelectorAll(".simpleFilter"),n=0,l=a.length;n<l;n++)"INPUT"===a[n].tagName?v(0,i+"-filter-"+a[n].getAttribute("data-settingname"),a[n]):v(0,i+"-filter-"+a[n].getAttribute("data-settingname"),a[n].querySelector("input"));for(var s=[],r=0,c=(a=e.querySelectorAll(".chkVideoTypeFilter")).length;r<c;r++)a[r].checked&&s.push(a[r].getAttribute("data-filter"));b.setFilter(i+"-filter-VideoTypes",s.join(","));for(var o=[],u=0,d=(a=e.querySelectorAll(".chkSeriesStatus")).length;u<d;u++)a[u].checked&&o.push(a[u].getAttribute("data-filter"));for(var p=[],h=0,f=(a=e.querySelectorAll(".chkGenreFilter")).length;h<f;h++)a[h].checked&&p.push(a[h].getAttribute("data-filter"));b.setFilter(i+"-filter-GenreIds",p.join(","))}(a,e.settings,e.settingsKey),t()):t()}))}))}}])&&h(t.prototype,i),Object.defineProperty(t,"prototype",{writable:!1}),e}()}}]);